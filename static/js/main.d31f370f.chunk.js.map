{"version":3,"sources":["assets/images/logo/logo.png","assets/images/characters sync /^/.//.*$","assets/images/characters/Iron-maiden.png","assets/images/characters/Mint-berry-crunch.png","assets/images/characters/Mysterion_tfbw_2.png","assets/images/characters/alter-egos-professor-chaos.png","assets/images/characters/general-disarray.png","assets/images/characters/mosquito.png","assets/images/characters/mysterion.png","assets/images/characters/superheroes-call-girl.png","assets/images/characters/superheroes-captain-diabetes.png","assets/images/characters/superherores-fastpass.png","assets/images/characters/superherores-prof-timmy.png","assets/images/characters/superherores-super-craig.png","assets/images/characters/superherores-wonder-tweek.png","assets/images/characters/the-coon.png","assets/images/characters/the-human-kite.png","assets/images/characters/toolshed.png","assets/images/characters/tupperware.png","Components/Logo/Logo.js","Components/Score/Score.js","Components/Correct/Correct.js","Components/Characters/Characters.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./Iron-maiden.png","./Mint-berry-crunch.png","./Mysterion_tfbw_2.png","./alter-egos-professor-chaos.png","./general-disarray.png","./mosquito.png","./mysterion.png","./superheroes-call-girl.png","./superheroes-captain-diabetes.png","./superherores-fastpass.png","./superherores-prof-timmy.png","./superherores-super-craig.png","./superherores-wonder-tweek.png","./the-coon.png","./the-human-kite.png","./toolshed.png","./tupperware.png","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve","Logo","_","react_default","a","createElement","className","Grid","item","xs","src","require","alt","Score","_ref","score","highScore","variantIcon","success","CheckCircleIcon","error","ErrorIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","props","classes","variant","other","objectWithoutProperties","Icon","SnackbarContent","assign","clsx","useStyles2","margin","Correct","correct","handleClose","openCorrect","openWrong","handleCloseSnackbar","Fragment","Snackbar","open","anchorOrigin","vertical","horizontal","onClose","autoHideDuration","Correct_MySnackbarContentWrapper","Characters","characters","handleOnClick","container","character","justify","key","value","selected","concat","path","onClick","App","state","event","reason","_this","setState","handleTriggerFeedback","target","handleHighScore","handleScore","handleSelected","JSON","parse","stringify","filter","randomizeCharacters","forEach","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","console","log","componentDidMount","_this$state","this","Components_Correct_Correct","handleCloseSnackBar","Components_Logo_Logo","Components_Score_Score","Components_Characters_Characters","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2LAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yFCAxC,IAAAC,EAAA,CACAC,oBAAA,GACAC,0BAAA,GACAC,yBAAA,GACAC,mCAAA,GACAC,yBAAA,GACAC,iBAAA,GACAC,kBAAA,GACAC,8BAAA,GACAC,qCAAA,GACAC,8BAAA,GACAC,gCAAA,GACAC,iCAAA,GACAC,kCAAA,GACAC,iBAAA,GACAC,uBAAA,GACAC,iBAAA,GACAC,mBAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAArB,EAAAsB,GAEA,SAAAC,EAAAF,GACA,IAAArB,EAAAwB,EAAAtB,EAAAmB,GAAA,CACA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAvB,EAAAmB,GAEAD,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAA1B,IAEAkB,EAAAU,QAAAP,EACAzB,EAAAC,QAAAqB,EACAA,EAAAE,GAAA,oBCtCAxB,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kLCuBzB8B,SAnBF,SAAAC,GACX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IAGfN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACdN,EAAAC,EAAAC,cAAA,OAAKb,GAAG,iBACPW,EAAAC,EAAAC,cAAA,OAAKK,IAAKC,EAAQ,IAAsCC,IAAI,OAAOpB,GAAG,SACtEW,EAAAC,EAAAC,cAAA,MAAIb,GAAG,YAAP,mBAGFW,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,OCAJI,SAbD,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,UACrB,OACEb,EAAAC,EAAAC,cAAA,WAIIF,EAAAC,EAAAC,cAAA,oBAAYU,EAAZ,gBAAgCC,EAAhC,6FCGFC,EAAc,CAClBC,QAASC,IACTC,MAAOC,KAGHC,EAAaC,YAAW,SAAAC,GAAK,MAAK,CACtCN,QAAS,CACPO,gBAAiBC,IAAM,MAEzBN,MAAO,CACLK,gBAAiBD,EAAMG,QAAQP,MAAMQ,MAEvCC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAaT,EAAMU,QAAQ,IAE7BC,QAAS,CACPC,QAAS,OACTC,WAAY,aAIVC,EAA2B,SAACC,GAChC,IAAMC,EAAUlB,IACRhB,EAA0CiC,EAA1CjC,UAAW6B,EAA+BI,EAA/BJ,QAASM,EAAsBF,EAAtBE,QAAYC,EAFE3C,OAAA4C,EAAA,EAAA5C,CAEQwC,EAFR,mCAGpCK,EAAO3B,EAAYwB,GAEzB,OACEtC,EAAAC,EAAAC,cAACwC,EAAA,EAAD9C,OAAA+C,OAAA,CACExC,UAAWyC,YAAKP,EAAQC,GAAUnC,GAClC6B,QACEhC,EAAAC,EAAAC,cAAA,QAAMb,GAAG,kBAAkBc,UAAWkC,EAAQL,SAC5ChC,EAAAC,EAAAC,cAACuC,EAAD,CAAMtC,UAAWyC,YAAKP,EAAQX,KAAMW,EAAQT,eAC3CI,IAGDO,KAYJM,EAAazB,YAAW,SAAAC,GAAK,MAAK,CACtCyB,OAAQ,CACNA,OAAQzB,EAAMU,QAAQ,OAqDXgB,EA7CC,SAAApC,GAA0EA,EAAvEqC,QAAuE,IAA9DC,EAA8DtC,EAA9DsC,YAAaC,EAAiDvC,EAAjDuC,YAAaC,EAAoCxC,EAApCwC,UAAoCxC,EAAzByC,oBAE/CP,IAGhB,OACE7C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoD,SAAA,KAEEH,GACAlD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CACEC,KAAML,EACNM,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,QAASV,EACTW,iBAAkB,KAGlB5D,EAAAC,EAAAC,cAAC2D,EAAD,CACEvB,QAAQ,UACRN,QAAQ,iCAKXmB,GAECnD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CACAC,KAAMJ,EACNK,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CC,QAASV,EACTW,iBAAkB,KAGlB5D,EAAAC,EAAAC,cAAC2D,EAAD,CACEvB,QAAQ,QACRN,QAAQ,0CC9DH8B,SAxCI,SAAAnD,GAA2C,IAAxCoD,EAAwCpD,EAAxCoD,WAAYC,EAA4BrD,EAA5BqD,cAAehB,EAAarC,EAAbqC,QAI/C,OACEhD,EAAAC,EAAAC,cAAA,OAAKC,UAAY6C,EAAiC,OAAvB,sBACzBhD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAM6D,WAAS,EACb3D,GAAI,IAGNN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAM6D,WAAS,EACb3D,GAAI,GAGFyD,EAAW9F,IAAI,SAAAiG,GAAS,OAEtBlE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EACb2D,WAAS,EAETE,QAAQ,SACRjC,WAAW,SACXkC,IAAKF,EAAU7E,GACfgF,MAAOH,EAAUI,UAEjBtE,EAAAC,EAAAC,cAAA,OAAKK,IAAKC,MAAQ,KAAA+D,OAAkCL,EAAUM,OAAS/D,IAAI,YAAYpB,GAAI6E,EAAU7E,GAAIc,UAAU,aAAamE,SAAYJ,EAAUI,SAAUG,QAAWT,QAOnLhE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAM6D,WAAS,EACb3D,GAAI,OC0MGoE,6MAtObC,MAAQ,CAEN3B,SAAS,EAETE,aAAa,EAEbC,WAAW,EAEXvC,MAAO,EAEPC,UAAW,EAEXkD,WAAY,CACV,CACES,KAAM,iCACNnF,GAAI,YACJiF,UAAU,GAEZ,CACEE,KAAM,uBACNnF,GAAI,cACJiF,UAAU,GAEZ,CACEE,KAAM,eACNnF,GAAI,WACJiF,UAAU,GAEZ,CACEE,KAAM,gBACNnF,GAAI,YACJiF,UAAU,GAEZ,CACEE,KAAM,4BACNnF,GAAI,WACJiF,UAAU,GAEZ,CACEE,KAAM,mCACNnF,GAAI,cACJiF,UAAU,GAEZ,CACEE,KAAM,4BACNnF,GAAI,WACJiF,UAAU,GAEZ,CACEE,KAAM,8BACNnF,GAAI,YACJiF,UAAU,GAEZ,CACEE,KAAM,+BACNnF,GAAI,aACJiF,UAAU,GAEZ,CACEE,KAAM,gCACNnF,GAAI,cACJiF,UAAU,GAEZ,CACEE,KAAM,eACNnF,GAAI,UACJiF,UAAU,GAEZ,CACEE,KAAM,qBACNnF,GAAI,YACJiF,UAAU,GAEZ,CACEE,KAAM,eACNnF,GAAI,WACJiF,UAAU,GAEZ,CACEE,KAAM,iBACNnF,GAAI,aACJiF,UAAU,GAEZ,CACEE,KAAM,kBACNnF,GAAI,aACJiF,UAAU,GAEZ,CACEE,KAAM,wBACNnF,GAAI,kBACJiF,UAAU,OAMhBrB,YAAc,SAAC2B,EAAOC,GACL,cAAXA,GAGJC,EAAKC,SAAS,CAAE7B,aAAa,EAAOC,WAAW,OAIjD6B,sBAAwB,SAAAJ,IAIQ,IAA1BA,EAAMK,OAAOX,SACfQ,EAAKC,SAAS,CAAE/B,SAAS,EAAME,aAAa,EAAMC,WAAW,KAC1B,IAA1ByB,EAAMK,OAAOX,SACtBQ,EAAKC,SAAS,CAAE/B,SAAS,EAAOE,aAAa,EAAOC,WAAW,IAG/D2B,EAAKC,SAAS,CAAE/B,SAAS,EAAOE,aAAa,EAAOC,WAAW,OAKnE+B,gBAAkB,SAAAnF,GAChB+E,EAAKC,SAAS,SAAAJ,GACZ,MAAM,CACJ9D,UAAWiE,EAAKH,MAAM/D,OAAOkE,EAAKH,MAAM9D,UAAYiE,EAAKH,MAAM/D,MAAQkE,EAAKH,MAAM9D,gBAUxFsE,YAAc,SAAApF,GACZ+E,EAAKC,SAAS,SAAAJ,GACZ,MAAM,CACJ/D,MAAOkE,EAAKH,MAAM/D,MAAM,EACxBoC,SAAS,IAEV,WAAO8B,EAAKI,uBAQjBE,eAAiB,SAAAR,GACf,IAAIb,EAAasB,KAAKC,MAAMD,KAAKE,UAAUT,EAAKH,MAAMZ,cAE3B,IAAxBa,EAAMK,OAAOX,UACIP,EAAWyB,OAAO,SAAAtB,GAAS,OAAIA,EAAU7E,KAAOuF,EAAMK,OAAO5F,KAAI,GACzEiF,UAAS,EACnBQ,EAAKC,SAAS,CAAChB,cAAa,WAAOe,EAAKW,wBAExCX,EAAKK,cACLL,EAAKI,oBAGLnB,EAAW2B,QAAQ,SAAAxB,GACjBA,EAAUI,UAAS,IAErBQ,EAAKC,SAAS,CAAChB,aAAYnD,MAAO,EAAGoC,SAAS,GAAQ,WAAO8B,EAAKW,4BAMtEzB,cAAgB,SAAAY,GACdE,EAAKE,sBAAsBJ,GAG3BE,EAAKM,eAAeR,MAKtBe,QAAW,SAACC,GAMV,IAJA,IACIC,EAAgBC,EADhBC,EAAeH,EAAMI,OAIlB,IAAMD,GAEXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OADFO,QAAQC,IAAI,YACHT,KAKTH,oBAAsB,SAAA1F,GACpBqG,QAAQC,IAAI,MACZ,IAAItC,EAAasB,KAAKC,MAAMD,KAAKE,UAAUT,EAAKH,MAAMZ,aAEtDe,EAAKa,QAAQ5B,GAEbe,EAAKC,SAAS,CAAChB,WAAYA,IAC3BqC,QAAQC,IAAIvB,EAAKH,MAAMZ,eAIzBuC,kBAAoB,SAAAvG,GAClB+E,EAAKW,+FAKE,IAAAc,EACmEC,KAAK7B,MAAvE3B,EADDuD,EACCvD,QAASE,EADVqD,EACUrD,YAAaC,EADvBoD,EACuBpD,UAAWY,EADlCwC,EACkCxC,WAAYnD,EAD9C2F,EAC8C3F,MAAOC,EADrD0F,EACqD1F,UAE5D,OACEb,EAAAC,EAAAC,cAAAF,EAAAC,EAAAoD,SAAA,KACErD,EAAAC,EAAAC,cAACuG,EAAD,CAASzD,QAASA,EAASC,YAAauD,KAAKvD,YAAaC,YAAaA,EAAaC,UAAWA,EAAWuD,oBAAqBF,KAAKE,sBACpI1G,EAAAC,EAAAC,cAACyG,EAAD,MACA3G,EAAAC,EAAAC,cAAC0G,EAAD,CAAOhG,MAAOA,EAAOC,UAAWA,IAChCb,EAAAC,EAAAC,cAAC2G,EAAD,CAAY9C,WAAYA,EAAYC,cAAewC,KAAKxC,cAAehB,QAAWA,YAjOxE8D,aCIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrH,EAAAC,EAAAC,cAACoH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d31f370f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.32a78a97.png\";","var map = {\n\t\"./Iron-maiden.png\": 62,\n\t\"./Mint-berry-crunch.png\": 63,\n\t\"./Mysterion_tfbw_2.png\": 64,\n\t\"./alter-egos-professor-chaos.png\": 65,\n\t\"./general-disarray.png\": 66,\n\t\"./mosquito.png\": 67,\n\t\"./mysterion.png\": 68,\n\t\"./superheroes-call-girl.png\": 69,\n\t\"./superheroes-captain-diabetes.png\": 70,\n\t\"./superherores-fastpass.png\": 71,\n\t\"./superherores-prof-timmy.png\": 72,\n\t\"./superherores-super-craig.png\": 73,\n\t\"./superherores-wonder-tweek.png\": 74,\n\t\"./the-coon.png\": 75,\n\t\"./the-human-kite.png\": 76,\n\t\"./toolshed.png\": 77,\n\t\"./tupperware.png\": 78\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61;","module.exports = __webpack_public_path__ + \"static/media/Iron-maiden.443f974f.png\";","module.exports = __webpack_public_path__ + \"static/media/Mint-berry-crunch.7b7c6c9c.png\";","module.exports = __webpack_public_path__ + \"static/media/Mysterion_tfbw_2.6127ac09.png\";","module.exports = __webpack_public_path__ + \"static/media/alter-egos-professor-chaos.8381e763.png\";","module.exports = __webpack_public_path__ + \"static/media/general-disarray.9d460026.png\";","module.exports = __webpack_public_path__ + \"static/media/mosquito.3f31bca0.png\";","module.exports = __webpack_public_path__ + \"static/media/mysterion.c513fab0.png\";","module.exports = __webpack_public_path__ + \"static/media/superheroes-call-girl.352e162a.png\";","module.exports = __webpack_public_path__ + \"static/media/superheroes-captain-diabetes.98f51914.png\";","module.exports = __webpack_public_path__ + \"static/media/superherores-fastpass.596765b4.png\";","module.exports = __webpack_public_path__ + \"static/media/superherores-prof-timmy.d9f88b70.png\";","module.exports = __webpack_public_path__ + \"static/media/superherores-super-craig.2bccfcca.png\";","module.exports = __webpack_public_path__ + \"static/media/superherores-wonder-tweek.f95244da.png\";","module.exports = __webpack_public_path__ + \"static/media/the-coon.f3cc045d.png\";","module.exports = __webpack_public_path__ + \"static/media/the-human-kite.f63cdd23.png\";","module.exports = __webpack_public_path__ + \"static/media/toolshed.125c5961.png\";","module.exports = __webpack_public_path__ + \"static/media/tupperware.332cdd6b.png\";","import React from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport './logo.css'\n\nconst Logo = _ => {\n  return (\n    <div className='root'>\n    <Grid item xs={1}>\n    \n    </Grid>\n    <Grid item xs={10}>\n     <div id='logoContainer'>\n      <img src={require('../../assets/images/logo/logo.png')} alt='logo' id='logo'/>\n      <h5 id='subtitle'>A Memory Game</h5>\n      </div>\n    </Grid>\n    <Grid item xs={1}>\n     \n    </Grid>\n  </div>\n  )\n}\n\nexport default Logo","import React from 'react'\nimport './score.css'\n\nconst Score = ({score, highScore})=> {\n  return (\n    <div>\n\n      \n\n        <h3>Score: {score}| Top Score: {highScore} </h3>\n      \n      \n    </div>\n  )\n}\n\nexport default Score","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { red, green } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport Slide from '@material-ui/core/Slide';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nconst MySnackbarContentWrapper = (props) => {\n  const classes = useStyles1();\n  const { className, message, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'error']).isRequired,\n};\n\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\n\n\n\n\nconst Correct = ({ correct, handleClose, openCorrect, openWrong, handleCloseSnackbar}) => {\n\n  const classes = useStyles2();\n\n\n  return (\n    <>\n    {\n      openCorrect &&\n      <Snackbar\n        open={openCorrect}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        onClose={handleClose}\n        autoHideDuration={2000}\n      >\n\n        <MySnackbarContentWrapper\n          variant=\"success\"\n          message=\"You Are Doing Good, Friend!\"\n        />\n      </Snackbar>\n    }\n    {\n       openWrong &&\n      \n        <Snackbar\n        open={openWrong}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        onClose={handleClose}\n        autoHideDuration={1000||null}\n      >\n\n        <MySnackbarContentWrapper\n          variant=\"error\"\n          message=\"You Have A Terrible Memory, Buddy!\"\n        />\n      </Snackbar>\n      \n\n}\n\n    </>\n  )\n}\n\nexport default Correct","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport './characters.css'\nimport { Container } from '@material-ui/core';\n\nconst Characters = ({ characters, handleOnClick, correct}) => {\n\n\n\n  return (\n    <div className={!correct ? 'root makeSelection' : 'root'}>\n      <Grid container\n        xs={2}\n      ></Grid>\n\n      <Grid container\n        xs={8}\n      >\n        {\n          characters.map(character => (\n\n            <Grid item xs={3}\n              container\n              // direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              key={character.id}\n              value={character.selected}\n            >\n              <img src={require(`../../assets/images/characters/${character.path}`)} alt='character' id={character.id} className='characters' selected = {character.selected} onClick = {handleOnClick}/>\n            </Grid>\n\n          ))\n        }\n      </Grid>\n\n      <Grid container\n        xs={2}\n      ></Grid>\n    </div>\n\n  )\n\n}\n\nexport default Characters","import React, { Component } from 'react';\nimport './App.css';\nimport Logo from './Components/Logo'\nimport Score from './Components/Score'\nimport Correct from './Components/Correct'\nimport Slide from '@material-ui/core/Slide';\nimport Characters from './Components/Characters'\n\nclass App extends Component {\n  state = {\n    //correct will turn on the shake div styling if it is false\n    correct: true,\n    //a correct answer popup will appear when openCorrect is set to true\n    openCorrect: false,\n    //a wrong answer popup will appear when openWrong is set to true\n    openWrong: false,\n    //tracking our current score\n    score: 0,\n    //Keeping track of the highest score we achieved\n    highScore: 0,\n    //our characters as a list of objects\n    characters: [\n      {\n        path: 'alter-egos-professor-chaos.png',\n        id: 'profChaos',\n        selected: false\n      },\n      {\n        path: 'general-disarray.png',\n        id: 'genDisarray',\n        selected: false\n      },\n      {\n        path: 'mosquito.png',\n        id: 'mosquito',\n        selected: false\n      },\n      {\n        path: 'mysterion.png',\n        id: 'mysterion',\n        selected: false\n      },\n      {\n        path: 'superheroes-call-girl.png',\n        id: 'callGirl',\n        selected: false\n      },\n      {\n        path: 'superheroes-captain-diabetes.png',\n        id: 'capDiabetes',\n        selected: false\n      },\n      {\n        path: 'superherores-fastpass.png',\n        id: 'fastPass',\n        selected: false\n      },\n      {\n        path: 'superherores-prof-timmy.png',\n        id: 'profTimmy',\n        selected: false\n      },\n      {\n        path: 'superherores-super-craig.png',\n        id: 'superCraig',\n        selected: false\n      },\n      {\n        path: 'superherores-wonder-tweek.png',\n        id: 'wonderTweek',\n        selected: false\n      },\n      {\n        path: 'the-coon.png',\n        id: 'theCoon',\n        selected: false\n      },\n      {\n        path: 'the-human-kite.png',\n        id: 'humanKite',\n        selected: false\n      },\n      {\n        path: 'toolshed.png',\n        id: 'toolshed',\n        selected: false\n      },\n      {\n        path: 'tupperware.png',\n        id: 'tupperware',\n        selected: false\n      },\n      {\n        path: 'Iron-maiden.png',\n        id: 'ironMaiden',\n        selected: false\n      },\n      {\n        path: 'Mint-berry-crunch.png',\n        id: 'mintBerryCrunch',\n        selected: false\n      }\n    ]\n  }\n\n  //I got this function from material UI. When the correct/wrong answer popups have to close, they run this function which sets openCorrect and openWrong to false\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ openCorrect: false, openWrong: false });\n  }\n\n  //This function determines whether we will trigger openCorrect or openWrong feedback\n  handleTriggerFeedback = event => {\n    //each character has a selected key which has either true or false as the value. True means it was selected previously and so you will get the wrong answer feedback.\n    //false means it was never selected and you will get the correct answer feedback.\n    //at the same time we set our value of correct, which will apply the shake div styuling when we had previously clicked on a character\n    if (event.target.selected === false) {\n      this.setState({ correct: true, openCorrect: true, openWrong: false })\n    } else if (event.target.selected === true) {\n      this.setState({ correct: false, openCorrect: false, openWrong: true })\n    }\n    else {\n      this.setState({ correct: false, openCorrect: false, openWrong: false })\n    }\n  }\n\n  //This function keeps track of our high score.\n  handleHighScore = _ => {\n    this.setState(state => {\n      return{\n        highScore: this.state.score>=this.state.highScore ? this.state.score : this.state.highScore\n      }\n    })\n     \n  }\n\n  // https://www.freecodecamp.org/news/get-pro-with-react-setstate-in-10-minutes-d38251d1c781/\n  //This function handles our current score.\n  //I used this form of handling state so that it is no longer asynchronous and that it is updating the state given the current value\n  //The website above points that we should do this if we are changing state when it depends on the current state\n  handleScore = _ => {\n    this.setState(state => {\n      return{\n        score: this.state.score+1,\n        correct: true\n      }\n    }, () => {this.handleHighScore()\n    // console.log(this.state.characters)\n    })\n     \n  }\n\n//This function changes the value of the key selected for each character you select to true. It only does that if it was previously set at false\n//if it is set to true and you click on it, then you lose. Here we reset the score to 0\n  handleSelected = event => {\n    let characters = JSON.parse(JSON.stringify(this.state.characters))\n    // this.randomizeCharacters()\n    if(event.target.selected===false){\n      const character = characters.filter(character => character.id === event.target.id)[0]\n      character.selected=true\n      this.setState({characters}, () => {this.randomizeCharacters()})\n      //every time we selected a character that was not previously selected, we run the functions which handle scores\n      this.handleScore()\n      this.handleHighScore() \n      // this.randomizeCharacters()\n    }else {\n      characters.forEach(character => {\n        character.selected=false\n      })\n      this.setState({characters, score: 0, correct: false}, () => {this.randomizeCharacters()}) \n      // this.randomizeCharacters()\n    }\n  }\n\n//this function runs a series of functions (created above) when we click on a charact\n  handleOnClick = event => {\n    this.handleTriggerFeedback(event)\n    //this function is defined below\n    // this.randomizeCharacters()\n    this.handleSelected(event)\n  }\n\n//I got this function from https://gomakethings.com/how-to-shuffle-an-array-with-vanilla-js/\n//it shuffles the elements in an array\n  shuffle =  (array) => {\n\n    let currentIndex = array.length;\n    let temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  console.log(\"shuffle!\")\n    return array;\n  \n  };\n\n  //we use the shuffle function and pass in our characters in it.\n  randomizeCharacters = _ => {\n    console.log('hi')\n    let characters = JSON.parse(JSON.stringify(this.state.characters))\n\n    this.shuffle(characters)\n\n    this.setState({characters: characters})\n    console.log(this.state.characters)\n  }\n\n  //This ensures that our array of characters is always shuffled when we mount the component/when the div loads\n  componentDidMount = _ => {\n    this.randomizeCharacters()\n  }\n\n\n\n  render() {\n    const { correct, openCorrect, openWrong, characters, score, highScore } = this.state\n\n    return (\n      <>\n        <Correct correct={correct} handleClose={this.handleClose} openCorrect={openCorrect} openWrong={openWrong} handleCloseSnackBar={this.handleCloseSnackBar} />\n        <Logo />\n        <Score score={score} highScore={highScore} />\n        <Characters characters={characters} handleOnClick={this.handleOnClick} correct = {correct} />\n      </>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}